"""empty message

Revision ID: 550b52494d81
Revises: 1fc58e5e4f33
Create Date: 2021-01-23 10:45:19.287725

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '550b52494d81'
down_revision = '1fc58e5e4f33'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plant_water_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('water_requirement_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.ForeignKeyConstraint(['water_requirement_fk'], ['plant_water_requirement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('plant_water_requirement_fk_fkey', 'plant', type_='foreignkey')
    op.drop_column('plant', 'water_requirement_fk')
    op.add_column('plant_light_requirement_note', sa.Column('plant_light_requirement_fk', sa.Integer(), nullable=True))
    op.drop_constraint('plant_light_requirement_note_plant_fk_fkey', 'plant_light_requirement_note', type_='foreignkey')
    op.create_foreign_key(None, 'plant_light_requirement_note', 'plant_light_requirement', ['plant_light_requirement_fk'], ['id'])
    op.drop_column('plant_light_requirement_note', 'plant_fk')
    op.add_column('plant_water_requirement_note', sa.Column('plant_water_requirement_fk', sa.Integer(), nullable=True))
    op.drop_constraint('plant_water_requirement_note_plant_fk_fkey', 'plant_water_requirement_note', type_='foreignkey')
    op.create_foreign_key(None, 'plant_water_requirement_note', 'plant_water_requirement', ['plant_water_requirement_fk'], ['id'])
    op.drop_column('plant_water_requirement_note', 'plant_fk')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plant_water_requirement_note', sa.Column('plant_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'plant_water_requirement_note', type_='foreignkey')
    op.create_foreign_key('plant_water_requirement_note_plant_fk_fkey', 'plant_water_requirement_note', 'plant', ['plant_fk'], ['id'])
    op.drop_column('plant_water_requirement_note', 'plant_water_requirement_fk')
    op.add_column('plant_light_requirement_note', sa.Column('plant_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'plant_light_requirement_note', type_='foreignkey')
    op.create_foreign_key('plant_light_requirement_note_plant_fk_fkey', 'plant_light_requirement_note', 'plant', ['plant_fk'], ['id'])
    op.drop_column('plant_light_requirement_note', 'plant_light_requirement_fk')
    op.add_column('plant', sa.Column('water_requirement_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('plant_water_requirement_fk_fkey', 'plant', 'water_requirement', ['water_requirement_fk'], ['id'])
    op.drop_table('plant_water_requirement')
    # ### end Alembic commands ###
