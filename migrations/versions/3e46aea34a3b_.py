"""empty message

Revision ID: 3e46aea34a3b
Revises: 305856f5524f
Create Date: 2021-01-23 10:34:33.819729

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e46aea34a3b'
down_revision = '305856f5524f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('genus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('growth_habit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('light_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('measurement_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('propagation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('propagation', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soil_fertility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('use',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('water_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('plant_light_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('light_requirement_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['light_requirement_fk'], ['light_requirement.id'], ),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_light_requirement_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('note_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['note_fk'], ['note.id'], ),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('note_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['note_fk'], ['note.id'], ),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('season_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.ForeignKeyConstraint(['season_fk'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_use',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('use_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.ForeignKeyConstraint(['use_fk'], ['use.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_water_requirement_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_fk', sa.Integer(), nullable=True),
    sa.Column('note_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['note_fk'], ['note.id'], ),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('plant_variety')
    op.add_column('plant', sa.Column('category_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('plant', sa.Column('drought_tolerant', sa.Boolean(), nullable=True))
    op.add_column('plant', sa.Column('family_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('frost_tolerant', sa.Boolean(), nullable=True))
    op.add_column('plant', sa.Column('genus_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('growth_habit_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('height', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('height_unit_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('image_uri', sa.String(), nullable=True))
    op.add_column('plant', sa.Column('propagation_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('soil_fertility_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('soil_ph', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('species_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('sub_species', sa.String(), nullable=True))
    op.add_column('plant', sa.Column('water_requirement_fk', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('width', sa.Integer(), nullable=True))
    op.add_column('plant', sa.Column('width_unit_fk', sa.Integer(), nullable=True))
    op.drop_constraint('plant_latin_name_key', 'plant', type_='unique')
    op.create_unique_constraint(None, 'plant', ['sub_species'])
    op.create_foreign_key(None, 'plant', 'measurement_unit', ['height_unit_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'measurement_unit', ['width_unit_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'family', ['family_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'genus', ['genus_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'soil_fertility', ['soil_fertility_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'category', ['category_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'propagation', ['propagation_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'water_requirement', ['water_requirement_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'growth_habit', ['growth_habit_fk'], ['id'])
    op.create_foreign_key(None, 'plant', 'species', ['species_fk'], ['id'])
    op.drop_column('plant', 'latin_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plant', sa.Column('latin_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='foreignkey')
    op.drop_constraint(None, 'plant', type_='unique')
    op.create_unique_constraint('plant_latin_name_key', 'plant', ['latin_name'])
    op.drop_column('plant', 'width_unit_fk')
    op.drop_column('plant', 'width')
    op.drop_column('plant', 'water_requirement_fk')
    op.drop_column('plant', 'sub_species')
    op.drop_column('plant', 'species_fk')
    op.drop_column('plant', 'soil_ph')
    op.drop_column('plant', 'soil_fertility_fk')
    op.drop_column('plant', 'propagation_fk')
    op.drop_column('plant', 'image_uri')
    op.drop_column('plant', 'height_unit_fk')
    op.drop_column('plant', 'height')
    op.drop_column('plant', 'growth_habit_fk')
    op.drop_column('plant', 'genus_fk')
    op.drop_column('plant', 'frost_tolerant')
    op.drop_column('plant', 'family_fk')
    op.drop_column('plant', 'drought_tolerant')
    op.drop_column('plant', 'description')
    op.drop_column('plant', 'category_fk')
    op.create_table('plant_variety',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('label', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('plant_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lifespan_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('soil_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lifespan_fk'], ['lifespan.id'], name='plant_variety_lifespan_fk_fkey'),
    sa.ForeignKeyConstraint(['plant_fk'], ['plant.id'], name='plant_variety_plant_fk_fkey'),
    sa.ForeignKeyConstraint(['soil_fk'], ['soil.id'], name='plant_variety_soil_fk_fkey'),
    sa.PrimaryKeyConstraint('id', name='plant_variety_pkey')
    )
    op.drop_table('plant_water_requirement_note')
    op.drop_table('plant_use')
    op.drop_table('plant_season')
    op.drop_table('plant_note')
    op.drop_table('plant_light_requirement_note')
    op.drop_table('plant_light_requirement')
    op.drop_table('water_requirement')
    op.drop_table('use')
    op.drop_table('species')
    op.drop_table('soil_fertility')
    op.drop_table('season')
    op.drop_table('propagation')
    op.drop_table('note')
    op.drop_table('measurement_unit')
    op.drop_table('light_requirement')
    op.drop_table('growth_habit')
    op.drop_table('genus')
    op.drop_table('family')
    op.drop_table('category')
    # ### end Alembic commands ###
